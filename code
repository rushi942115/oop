//Exp no.1: Switch Case Statement
class StudentGrade
{
public static void main(String args[])
{
int percent=Integer.parseInt(args[0]);
int G= percent/10;
switch(G)
{
case 10:
case 9:
case 8:
case 7:
System.out.println("Neha has secured Distinction");
break;
case 6:
System.out.println(" Neha has secured First Class");
break;
case 5:
System.out.println("Neha has secured Second Class");
break;
case 4:
System.out.println("Neha has secured Pass class");
break;
case 3:
case 2:
case 1:
case 0:
System.out.println("Neha has Failed");
break;
default:
System.out.println("Invalid Score");
}
}
}





//2  input through keyboard
import java.util.*;
class rect
{
int l,w,a;
public void getdata()
{
Scanner sc=new Scanner (System.in);
System.out.println("Enter The Length and Width");
l=sc.nextInt();
w=sc.nextInt();
System.out.println("The Entered Length and Width "+ l+" & " + w );
}
public void calculate()
{
a=l*w;
}
public void display()
{
System.out.println(" The Area of Rectangle is "+a);
}
}
class area 
{
public static void main(String args[])
{
rect r = new rect();
r.getdata();
r.calculate();
r.display();
}
}




// Exp3.a method Overload
import java.util.*;
class rect
{
public void area(int s)
{
System.out.println("Area of Square: "+(s*s));
}
public void area(float l, float w)
{
System.out.println("Area of Rectangle: "+(l*w));
}
public void area(float r)
{
System.out.println("Area of Circle: "+(3.14*r*r));
}
public static void main(String args[])
{
rect r=new rect();
r.area(5);
r.area(2.5f);
r.area(5.7f,2.5f);
}
}







//Exp3.B Constructor Overload 
class container {
 float length, width, height;
 public container() {
 System.out.println("Constructor With No parameters");
 length = 20f;
 width = 25f;
 height = 15f;
 }
 public container(float l) {
 System.out.println("Constructor With 1 parameter");
 length = l;
 width = 25f;
 height = 15f;
 }
 public container(float l, float w) {
 System.out.println("Constructor With 2 parameters");
 length = l;
 width = w;
 height = 15f;
 }
 public container(float l, float w, float h) {
 System.out.println("Constructor With 3 parameters");
 length = l;
 width = w;cd Desktop
 height = h;
 }
 void vol() {
 System.out.println("The volume of cuboid with l=" + length + ", w=" + width + ", h=" + height
+ " is " + (length * width * height));
 }
 public static void main(String args[]) {
 container c = new container();
 c.vol();
 container c1 = new container(52f);
 c1.vol();
 container c2 = new container(52f, 55f);
 c2.vol();
 container c3 = new container(52f, 55f, 75f);
 c3.vol();
 }
}



//2d array

import java.util.*;


public class TwoDArrays {
   public static void main(String args[]) {
       Scanner sc = new Scanner(System.in);
       int rows = sc.nextInt();
       int cols = sc.nextInt();


       int[][] numbers = new int[rows][cols];


       //input
       //rows
       for(int i=0; i<rows; i++) {
           //columns
           for(int j=0; j<cols; j++) {
               numbers[i][j] = sc.nextInt();
           }
       }




       for(int i=0; i<rows; i++) {
           for(int j=0; j<cols; j++) {
                   System.out.print(numbers[i][j]+" ");
               }
               System.out.println();
           }
   }








//expt 4 - String Package
package calculator;
public class sum
{
public void add(int a,int b)
{
System.out.println("The sum of "+a+" and "+b+" is "+(a+b));
}
}
package calculator;
public class difference
{
public void diff(int a,int b)
{
System.out.println("The difference between "+a+" and "+b+" is "+(a-b));
}
import java.util.*;
import calculator.sum;
import calculator.difference;
public class pack
{
public static void main(String args[])
{
Scanner sc=new Scanner(System.in);
System.out.println("Enter value of n1");
int n1=sc.nextInt();
System.out.println("Enter value of n2");
int n2=sc.nextInt();
sum s=new sum();
s.add(n1,n2);
difference d=new difference();
d.diff(n1,n2);
}
}





//5b strings function
class string function
{
public static void main(String args[])
{
String str="Hello I am Neha Narkhede,";
System.out.println("The length of String is "+str.length());
System.out.println("The Char At of String is "+str.charAt(10));
System.out.println("The sub Stirngs of String is "+str.substring(0,5));
String str2="Welcome to the Dept of IoT";
System.out.println("The Two Strings is "+str.concat(str2));
System.out.println("The index of String is "+str.indexOf("Narkhede"));
System.out.println("The Replacement of String is "+str.replace("Hello","Nasmate"));
System.out.println("The Upper case of String is "+str.toUpperCase());
System.out.println("The Lower case of String is "+str.toLowerCase());
System.out.println("The use of trim is "+str.trim());
String word[]=str2.split(" ");
for(String words : word)
{
System.out.println(words);
}
System.out.println("The Start of the sentence is "+str.startsWith("HI"));
System.out.println("The end of the sentence is "+str2.endsWith("IoT"));
}
}
 




//6a String buffer
import java.lang.*;
class StringBufferEx
{
public static void main(String args[])
{
 StringBuffer sb=new StringBuffer();
 System.out.println(sb.capacity());
 sb.append("Hello");
 System.out.println("String is:"+sb);
 System.out.println(sb.capacity());
 sb.append("lava is a language");
 System.out.println("After appending the string is :"+sb);
 System.out.println("Capacity of the string after appending:"+sb.capacity());//Capacity of string increases 
by(oldcapacity*2)+2
 System.out.println("The length of the string:"+sb.length());
 System.out.println("After deleting :"+sb.delete(2,5));
 System.out.println("After replacing :"+sb.replace(1,3,"java"));
 StringBuffer sb1=new StringBuffer("NAME");
 System.out.println("After reversing :"+sb1.reverse());
}
}


//6vector 
import java.util.Vector;
class vectordemo
{
public static void main(String args[])
{
Vector <String> dept = new Vector<>();
dept.add("Computer science and Engineering");
dept.add("IoT, Cyber Security including BlockChain Technology");
dept.add("Artificial intelligence ");
System.out.println("Initial departments :"+dept);
dept.add(2,"Electrical Engineering");
System.out.println("After adding departments :"+dept);
Vector <String> department = new Vector<>();
department.add("Mechanical Engineering");
department.addAll(dept);
System.out.println("Departments with AddALL:"+department);
String newdept=department.get(4);
System.out.println("Department at index 4:"+newdept);
String remdept=department.remove(1);
System.out.println("Department after removing:"+department);
System.out.println("Dept size is:"+dept.size());
}
}






//7a Single Inheritance 
class Rectangle
{ int l,b;
void Setval(int x,int y)
{ l=x;
b=y;
} int GetRect()
{
return l*b;
}} class Triangle extends Rectangle
{
float GetTri()
{
float a;
a=(float)l/2*b*l;
return(a);
}} class SingleInheritance
{
public static void main(String args[])
{
Triangle Tri=new Triangle();
Tri.Setval(50,8);
System.out.println("Area of Rectangle is:"+Tri.GetRect());
System.out.println("Area of Triangle is:"+Tri.GetTri());
}





// multi level inheritance
class WorkerDetail
{
int c,s;
String n;
float h;
void setSalary(int x, String y, int z)
{
c=x;
n=y;
s=z;
}
void showDetail()
{
System.out.println("Code :"+c);
System.out.println("Name :"+n);
System.out.println("Salary "+s);
}
void getHra()
{
h=(float)s*60/100;
System.out.println("HRA :"+h);
}
}
class OfficerSal extends WorkerDetail
{
float d;
void getDA()
{
d=(float)s*98/100;
System.out.println("DA :"+d);
}
};
class ManagerSal extends OfficerSal
{
float ca,g;
void getCA()
{
ca=(float)s*20/100;
System.out.println("City Allowance :"+ca);
}
void getgross()
{
g=s+h+d+ca;
System.out.println("Gross Salary :"+g);
}
}
class Multilevel
{
public static void main(String[] args)
{
ManagerSal m=new ManagerSal();
m.setSalary(11,"Ankit Rana",13000);
System.out.println("Details of Manager is :");
m.showDetail();
m.getHra();
m.getDA();
m.getCA();
m.getgross();
}
};




//hierrachial inheritance
class Shape {
   public void area() {
       System.out.println("Displays Area of Shape");
   }
}
class Triangle extends Shape {
   public void area(int h, int b) {
       System.out.println((1/2)*b*h);
   }  
}
class Circle extends Shape {
   public void area(int r) {
       System.out.println((3.14)*r*r);
   }  















//interface program
import java.io.*;
interface Polygon{
void getArea(int length,int breadth);
}
class Rectangle implements Polygon{
public void getArea(int length,int breadth){
System.out.println("The area of the rectangle is"+(length*breadth));
}
}
class interfacepgm{
public static void main(String[] args)throws Exception
{
InputStreamReader is=new InputStreamReader(System.in);
BufferedReader br= new BufferedReader(is);
System.out.print("Enter the length of rectangle:");
int a = Integer.parseInt(br.readLine());
System.out.print("Enter the breadth of rectangle:");
int b= Integer.parseInt(br.readLine());
Rectangle r1=new Rectangle ();
r1.getArea(a,b);
}
}




//abstract class
abstract class shape
{
abstract void area();
abstract void perimeter();
}
class rect extends shape
{
float l,b;
rect(float x, float y)
{
l=x;
b=y;
}
public void area()
{
System.out.println("the area of reactnagle is :"+(l*b));
}
public void perimeter()
{
System.out.println("The perimeter of rectangle is "+(2*(l+b)));
}
}
class abstractdemo
{
public static void main(String args[])
{
rect r=new rect(49.1f,04.5f);
r.area();
r.perimeter();
}
} 



//user defined exception
public class NestedTryBlock1{
public static void main(String args[]){
try{
try{
System.out.println("going to divide by 0");
int b=39/0;
}
catch(ArithmeticException e)
{
System.out.println(e);
}
try{
int a[]=new int[5];
a[5]=4;
}
catch(NullPointerException e)
{
System.out.println(e);
}
System.out.println("other statement");
}
catch(Exception e)
{
System.out.println("handeled the exception(outer catch)");
}
System.out.println("normal flow..");
}
}



//exception handling
public class Main{
static void validate_Age(int age)
{
if(age<18)
throw new ArithmeticException("Not eligiable to vote and drive!!");
else
System.out.println("Eligiable to vote and drive!!");
}
public static void main(String args[])
{
validate_Age(10);
System.out.println("rest of the code....");
}



//multithreating
class TH extends Thread
{
public void run()
{
Thread t = currentThread();
System.out.println("Thread status: "+isAlive());
for(int i=0;i<=5;i++)
{
try{
Thread.sleep(1000);
}
catch(Exception e)
{
}
System.out.println(i);
}
}
}
class Mainth1
{
public static void main(String[] args)
{
TH t1 = new TH();
TH t2 = new TH();
System.out.println("ID: "+t1.getId());
System.out.println("Name: "+t1.getName());
t1.setName("OOPM");
System.out.println("Modified Name: "+t1.getName());
System.out.println("Priority: "+t1.getPriority());
t1.setPriority(10);
System.out.println("Modified Priority: "+t1.getPriority());
t1.start();
try{
t1.join(); //join method in Java allows one thread to wait until another thread completes execution
}
catch(Exception e)
{
}
System.out.println("Thread Status: "+t1.isAlive());
t2.start();
}
}






